{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset0 Liberation Serif{\*\falt Times New Roman};}{\f4\fswiss\fprq2\fcharset0 Liberation Sans{\*\falt Arial};}{\f5\froman\fprq2\fcharset0 Helvetica{\*\falt Arial};}{\f6\fnil\fprq2\fcharset128 Sitka Text;}{\f7\fnil\fprq2\fcharset0 Microsoft YaHei;}{\f8\fnil\fprq2\fcharset0 Arial;}{\f9\fswiss\fprq0\fcharset128 Arial;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet{\s0\snext0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1 Normal;}
{\s15\sbasedon0\snext16\dbch\af7\dbch\af8\afs28\sb240\sa120\keepn\loch\f4\fs28 Heading;}
{\s16\sbasedon0\snext16\sl276\slmult1\sb0\sa140 Text Body;}
{\s17\sbasedon16\snext17\dbch\af9\sl276\slmult1\sb0\sa140 List;}
{\s18\sbasedon0\snext18\dbch\af9\afs24\ai\sb120\sa120\noline\fs24\i Caption;}
{\s19\sbasedon0\snext19\dbch\af9\noline Index;}
}{\*\generator LibreOffice/6.3.3.2$Windows_X86_64 LibreOffice_project/a64200df03143b798afd1ec74a12ab50359878ed}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr2020\mo4\dy21\hr17\min1}{\printim\yr0\mo0\dy0\hr0\min0}}{\*\userprops}\deftab720
\viewscale120
{\*\pgdsctbl
{\pgdsc0\pgdscuse451\pgwsxn11906\pghsxn16838\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\pgdscnxt0 Default Style;}}
\formshade{\*\pgdscno0}\paperh16838\paperw11906\margl1440\margr1440\margt1440\margb1440\sectd\sbknone\sectunlocked1\pgndec\pgwsxn11906\pghsxn16838\marglsxn1440\margrsxn1440\margtsxn1440\margbsxn1440\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
{\*\ftnsep\chftnsep}\pgndec\pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Task 2 Klee vs AFL}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
AFL Description}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
AFL is a fuzzer, command line tool, which is used in order to test a program\uc2 \u8217\'81\'66s stability. The tool, can either be used in order to instrument existing source code, or for black-box fuzzing. The instrumentation introduced by afl, is used in order to capture branch coverage, as well as any branches that have already been taken. The instrumentation itself, is effectively a shared memory map, of 64K. The tool, counts branch hits, by measuring the number of bytes set in this area. \uc1 }
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
AFL, offers afl-gcc, a gcc frontend which compiles source code using specific gcc flags. In regards to input, the tool accepts sample input in the form of files. Depending on the application to be tested, these can be binary-only files, or dictionaries, for textual input.}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
For black-box fuzzing, afl uses qemu\uc2 \u8217\'81\'66s basic blocks, upon which the instrumentation is implemented.\uc1 }
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
For branch coverage, AFL uses the tuple (branch_input, branch_output), which is stored in a global map. This tuple is used in order to determine whether an input can be characterised as interesting(input which triggers new branches). This type of input, is placed bad in the input queue, in order to undergo further mutation, by the use of genetic algorithms. These results(crashes),}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
can be subsequently explored by running afl in crash-explorer mode.}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Performance-wise, the size of the aforementioned 64K map has been chosen due to it\uc2 \u8217\'81\'66s ability to fit in L2 caches(thus allowing for faster processing), while minimising possible collisions for each encountered branch hit. AFL also, provides a so called \u8220\'81\'67fork-server\u8221\'81\'68, which forks the fuzzed process and subsequently executes it. The speed improvements though, vary based on the fuzzed binary. \uc1 }
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Parallelisation of the tool is also available, either on CPU-core level, or machine-level.}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Finally, the tool makes use of an output directory, within which it stores compressed core files which can be used by afl while in crush-explorer mode, in order to explore the state which led to the crash.}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
KLEE Description }
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
KLEE is a symbolic execution engine, which uses LLVM byte code, instead of binary instrumentation. The tool is run through the command line, accepting various arguments, including the total runtime, the type and}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
name of the variables for which it checks, as well as the maximum number of failures. In addition, KLEE additionally generates tests once an error has been found based on constructed path constraints which are subsequently run on the original program\uc2 \u8217\'81\'66s exe.\uc1 }
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Klee generates tests. AFL does not.}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
In addition, when it finds an error, it generates a test based on the path constraint, which is then executed on the unmodified version of the application.}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Even though these generated tests, produced by KLEE follow the path constraint, that were generated from, they may still fail due to undeterministic program conditions. These false positives can explored with gdb and gcov. Such a capability is also available through AFL. AFL though, offer the crush-explorer mode, which  }
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
AFL, follows a similar but different approach, requiring the user to provide samples of concrete input, which are mutated through the use of a mutation engine. Regarding runtime and number of failures, AFL does not provide such options. In contrast, it simply runs until a SIGINT is provided.}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Unlike AFL, KLEE symbolically executes a single instruction in the context of a state. }
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Klee-> conditional branches take a boolean expression.}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
\tab Partially uses constraint solvers. When load/store instructions are present, the addressed memory is handled as a segmented array, allowing STP to check the bounds of these instructions without performance deficits}
\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch

\par \pard\plain \s0\hich\af3\dbch\af10\langfe2052\dbch\af8\afs24\alang1081\nowidctlpar\hyphpar0\ltrpar\cf0\loch\f3\fs24\lang1033\kerning1\ql\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\ltrpar{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6
    }{\rtlch\hich\af6 \ltrch\cf0\fs24\loch\f6\loch
Since programs can have state-space explosion, memory footprint is an issue. That\uc2 \u8217\'81\'66s why KLEE implements object-level copy-on-write.\uc1 }
\par }